/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ged;

import java.awt.GraphicsEnvironment;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JLabel;
import javax.swing.KeyStroke;
import javax.swing.border.TitledBorder;
import javax.swing.Timer;

/**
 *
 * @author Comp
 */
public class CodeDialog extends javax.swing.JDialog
{
  private final ConfigurationManager cfg_mgr;
  private final DiagramController diag_controller;
  private Timer code_msg_timer;
  private CodeGenerator code_gen;
  private final JavaCodeGenerator java_gen;
  private ArrayList<File> code_files;
  private int file_index;
  
  /**
   * Creates new form DiagramDialog
   * @param parent
   * @param modal
   * @throws java.io.IOException
   */
  public CodeDialog(java.awt.Frame parent, boolean modal) throws IOException
  {
    super(parent, modal);
    initComponents();
    initKeyComponents();
    diag_controller = DiagramController.getInstance();
    
    // Force save message to be on top
    this.getContentPane().setComponentZOrder(CodeMessage, 0);
    
    cfg_mgr = ConfigurationManager.getInstance();
    int msgTimeoutMs = Integer.parseInt(
            cfg_mgr.getConfigValue(ConfigurationManager.MSG_TIMEOUT));
    
    setVisible(false);  
    setBounds(GraphicsEnvironment.getLocalGraphicsEnvironment().
            getMaximumWindowBounds());
    CodeMessage.setVisible(false);
    
    // Set up a timer to make save messages disappear
    code_msg_timer = new Timer(msgTimeoutMs, new ActionListener(){
      @Override
      public void actionPerformed(ActionEvent e)
      {
        CodeMessage.setVisible(false);
        code_msg_timer.stop();
      }
    });
    
    java_gen = new JavaCodeGenerator();
    code_gen = java_gen;
    file_index = 0;
  }
  
  private void initKeyComponents()
  {
    CodeScrollPane.getInputMap(JLabel.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.
            getKeyStroke(KeyEvent.VK_S, KeyEvent.CTRL_DOWN_MASK), "KeyS");

    Action saveAction = new AbstractAction()
    {
      @Override
      public void actionPerformed(ActionEvent e)
      {
        save();
      }
    };
    
    CodeScrollPane.getActionMap().put("KeyS", saveAction);
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents()
  {

    CodeMessage = new javax.swing.JLabel();
    CodeScrollPane = new javax.swing.JScrollPane();
    CodeTextArea = new javax.swing.JTextArea();
    NextPageBtn = new javax.swing.JButton();
    PreviousPageBtn = new javax.swing.JButton();
    PageNumberText = new javax.swing.JLabel();
    CodeMenuBar = new javax.swing.JMenuBar();
    CodeFileMenu = new javax.swing.JMenu();
    CodeSaveItem = new javax.swing.JMenuItem();
    CodeCloseItem = new javax.swing.JMenuItem();

    setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    setModal(true);
    setName("Diagram"); // NOI18N
    setUndecorated(true);

    CodeMessage.setLabelFor(CodeScrollPane);
    CodeMessage.setText("SaveMsg");
    CodeMessage.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
    CodeMessage.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
    CodeMessage.setMinimumSize(new java.awt.Dimension(2000000, 14));
    CodeMessage.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

    CodeScrollPane.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "DiagramTitle", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Verdana", 0, 24), java.awt.Color.blue)); // NOI18N

    CodeTextArea.setEditable(false);
    CodeTextArea.setColumns(20);
    CodeTextArea.setRows(5);
    CodeTextArea.setText("Code area");
    CodeScrollPane.setViewportView(CodeTextArea);

    NextPageBtn.setText(">>");
    NextPageBtn.addMouseListener(new java.awt.event.MouseAdapter()
    {
      public void mouseReleased(java.awt.event.MouseEvent evt)
      {
        NextPageBtnMouseReleased(evt);
      }
    });

    PreviousPageBtn.setText("<<");
    PreviousPageBtn.addMouseListener(new java.awt.event.MouseAdapter()
    {
      public void mouseReleased(java.awt.event.MouseEvent evt)
      {
        PreviousPageBtnMouseReleased(evt);
      }
    });

    PageNumberText.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    PageNumberText.setText("Page Number");

    CodeFileMenu.setText("File");

    CodeSaveItem.setText("Save (CTRL+S)");
    CodeSaveItem.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        CodeSaveItemActionPerformed(evt);
      }
    });
    CodeFileMenu.add(CodeSaveItem);

    CodeCloseItem.setText("Close");
    CodeCloseItem.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        CodeCloseItemActionPerformed(evt);
      }
    });
    CodeFileMenu.add(CodeCloseItem);

    CodeMenuBar.add(CodeFileMenu);

    setJMenuBar(CodeMenuBar);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(CodeScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 687, Short.MAX_VALUE)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(PageNumberText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addGroup(layout.createSequentialGroup()
            .addGap(0, 0, Short.MAX_VALUE)
            .addComponent(PreviousPageBtn)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(NextPageBtn)))
        .addContainerGap())
      .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
          .addContainerGap()
          .addComponent(CodeMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 667, Short.MAX_VALUE)
          .addContainerGap()))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addComponent(CodeScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 424, Short.MAX_VALUE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(PageNumberText)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(NextPageBtn)
          .addComponent(PreviousPageBtn))
        .addContainerGap())
      .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
          .addContainerGap(459, Short.MAX_VALUE)
          .addComponent(CodeMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addContainerGap()))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void CodeSaveItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_CodeSaveItemActionPerformed
  {//GEN-HEADEREND:event_CodeSaveItemActionPerformed
    save();
  }//GEN-LAST:event_CodeSaveItemActionPerformed

  private void CodeCloseItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_CodeCloseItemActionPerformed
  {//GEN-HEADEREND:event_CodeCloseItemActionPerformed
    try
    {
      close();
    }
    catch (IOException ex)
    {
      Logger.getLogger(CodeDialog.class.getName()).log(Level.SEVERE, null, ex);
    }
  }//GEN-LAST:event_CodeCloseItemActionPerformed

  private void NextPageBtnMouseReleased(java.awt.event.MouseEvent evt)//GEN-FIRST:event_NextPageBtnMouseReleased
  {//GEN-HEADEREND:event_NextPageBtnMouseReleased
    try
    {
      displayNextFile();
    }
    catch (IOException ex)
    {
      Logger.getLogger(CodeDialog.class.getName()).log(Level.SEVERE, null, ex);
    }
  }//GEN-LAST:event_NextPageBtnMouseReleased

  private void PreviousPageBtnMouseReleased(java.awt.event.MouseEvent evt)//GEN-FIRST:event_PreviousPageBtnMouseReleased
  {//GEN-HEADEREND:event_PreviousPageBtnMouseReleased
    try
    {
      displayPreviousFile();
    }
    catch (IOException ex)
    {
      Logger.getLogger(CodeDialog.class.getName()).log(Level.SEVERE, null, ex);
    }
  }//GEN-LAST:event_PreviousPageBtnMouseReleased

  public void open() throws IOException
  {
    Diagram openedDiagram = diag_controller.getOpenDiagram();
    if(openedDiagram != null)
    {
      TitledBorder paneBorder = (TitledBorder)CodeScrollPane.getBorder();
      paneBorder.setTitle(openedDiagram.getName());
      code_files = code_gen.generateCode(openedDiagram);
      file_index = 0;
      displayCurrentFile();
      setVisible(true);
    }
  }
  
  public void close() throws IOException
  {
    Iterator<File> fileIt = code_files.iterator();
    while(fileIt.hasNext())
    {
      File f = fileIt.next();
      f.delete();
    }
    setVisible(false);
  }
  
  private void displayCurrentFile() throws FileNotFoundException, IOException
  {
    if(file_index < code_files.size())
    {
      CodeTextArea.setVisible(false);
      File codeFile = code_files.get(file_index);
      String codeStr = "";
      try (BufferedReader codeReader = new BufferedReader(new FileReader(codeFile))) {
        String line = codeReader.readLine();
        while(line != null)
        {
          codeStr += line + "\n";
          line = codeReader.readLine();
        }
        codeReader.close();
      }
      
      int pageNum    = file_index + 1;
      String pageStr = Integer.toString(pageNum) + " / ";
      pageStr += Integer.toString(code_files.size());
      PageNumberText.setText(pageStr);
      
      CodeTextArea.setText(codeStr);
      CodeTextArea.setVisible(true);
    }
    else if(code_files.isEmpty())
    {
      PageNumberText.setText("0 / 0");
      CodeTextArea.setText("No code generated");
    }
  }
  
  private void displayNextFile() throws IOException
  {
    file_index++;
    if(file_index < code_files.size())
      displayCurrentFile();
    else
      file_index = code_files.size() - 1;
  }
  
  private void displayPreviousFile() throws IOException
  {
    file_index--;
    if(file_index >= 0)
      displayCurrentFile();
    else
      file_index = 0;
  }
  
  private void save()
  {
    // TODO save code as
    boolean saved = diag_controller.saveDiagram();
    String saveMsg;
    if(saved)
      saveMsg = "Successfully saved diagram: ";
    else
      saveMsg = "FAILED TO SAVE DIAGRAM: ";
    saveMsg += diag_controller.getOpenDiagramName();
    CodeMessage.setText(saveMsg);
    CodeMessage.setVisible(true);
    
    code_msg_timer.stop();
    code_msg_timer.start();
  }
  
  /**
   * @param args the command line arguments
   */
  public static void main(String args[])
  {
    /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try
    {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
      {
        if ("Nimbus".equals(info.getName()))
        {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    }
    catch (ClassNotFoundException ex)
    {
      java.util.logging.Logger.getLogger(CodeDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    catch (InstantiationException ex)
    {
      java.util.logging.Logger.getLogger(CodeDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    catch (IllegalAccessException ex)
    {
      java.util.logging.Logger.getLogger(CodeDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    catch (javax.swing.UnsupportedLookAndFeelException ex)
    {
      java.util.logging.Logger.getLogger(CodeDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
        //</editor-fold>

    /* Create and display the dialog */
    java.awt.EventQueue.invokeLater(new Runnable()
    {
      @Override
      public void run()
      {
        try
        {
          CodeDialog dialog = new CodeDialog(new javax.swing.JFrame(), true);
          dialog.addWindowListener(new java.awt.event.WindowAdapter()
          {
            @Override
            public void windowClosing(java.awt.event.WindowEvent e)
            {
              System.exit(0);
            }
          });
          dialog.setVisible(true);
        }
        catch (IOException ex)
        {
          Logger.getLogger(CodeDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JMenuItem CodeCloseItem;
  private javax.swing.JMenu CodeFileMenu;
  private javax.swing.JMenuBar CodeMenuBar;
  private javax.swing.JLabel CodeMessage;
  private javax.swing.JMenuItem CodeSaveItem;
  private javax.swing.JScrollPane CodeScrollPane;
  private javax.swing.JTextArea CodeTextArea;
  private javax.swing.JButton NextPageBtn;
  private javax.swing.JLabel PageNumberText;
  private javax.swing.JButton PreviousPageBtn;
  // End of variables declaration//GEN-END:variables
}
